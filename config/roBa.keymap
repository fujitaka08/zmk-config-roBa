#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <18 19>;
        };

        muhennkann {
            bindings = <&kp DELETE>;
            key-positions = <30 31>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        space4: space4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp SPACE &kp SPACE &kp SPACE>;
            label = "SPACE4";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W      &kp E      &kp R                &kp T                                               &kp Y             &kp U  &kp I      &kp O         &kp P
&mt LEFT_CONTROL A  &kp S      &kp D      &kp F                &kp G             &kp C_MUTE         &kp LS(LG(S))  &kp H             &kp J  &kp K      &kp L         &mt LEFT_CONTROL SEMICOLON
&mt LEFT_SHIFT Z    &lt 3 X    &kp C      &kp V                &kp B             &kp LS(LC(N))      &kp LEFT_GUI   &kp N             &kp M  &kp COMMA  &lt 3 PERIOD  &mt LEFT_SHIFT SLASH
&mo 6               &kp LG(E)  &kp LG(L)  &mt LEFT_ALT ESCAPE  &lt 1 LANGUAGE_2  &lt 1 SPACE        &lt 2 ENTER    &lt 2 LANGUAGE_1                                  &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   &kp LS(NUMBER_5)                      &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)   &kp LS(NUMBER_0)
&kp LS(LC(C))     &trans            &kp SQT           &kp DOUBLE_QUOTES  &trans            &trans      &trans  &kp LEFT_BRACE    &kp RIGHT_BRACE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS
&kp GRAVE         &kp LS(GRAVE)     &kp BACKSLASH     &kp LS(BACKSLASH)  &space4           &trans      &trans  &kp EQUAL         &kp LS(EQUAL)     &none             &none              &kp LS(F11)
&trans            &trans            &trans            &trans             &trans            &trans      &trans  &trans                                                                   &trans
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3       &kp NUMBER_4         &kp NUMBER_5                      &kp NUMBER_6   &kp NUMBER_7    &kp NUMBER_8    &kp NUMBER_9     &kp NUMBER_0
&kp LCTRL       &none         &kp LC(PAGE_UP)    &kp LA(LEFT_ARROW)   &none         &trans      &trans  &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp LA(UP_ARROW)
&kp LEFT_SHIFT  &none         &kp LC(PAGE_DOWN)  &kp LA(RIGHT_ARROW)  &none         &none       &trans  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LA(DOWN_ARROW)
&trans          &trans        &trans             &trans               &trans        &trans      &trans  &trans                                                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp F11  &kp F12  &kp LS(LG(S))  &kp LA(F4)  &kp LS(LC(N))                      &none         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none
&kp F1   &kp F2   &kp F3         &kp F4      &kp F5         &trans      &trans  &kp DOT       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none
&kp F6   &kp F7   &kp F8         &kp F9      &kp F10        &trans      &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none
&trans   &trans   &trans         &trans      &trans         &trans      &trans  &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans            &trans    &mkp MB3  &trans    &trans                      &trans  &trans    &mkp MB3  &trans    &trans
&kp LEFT_CONTROL  &mkp MB1  &mo 5     &mkp MB2  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5     &mkp MB2  &trans
&kp LEFT_SHIFT    &kp X     &kp C     &kp V     &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans            &trans    &trans    &trans    &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans            &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
